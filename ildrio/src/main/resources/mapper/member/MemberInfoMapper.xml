<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="ilike.ildrio.mapper.member.MemberInfoMapper">    
 
 
 
	<select id="getListCount_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel"  resultType="java.lang.Integer"> 
		SELECT FOUND_ROWS() totRow
	</select> 
	 
	<select id="getList_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel" resultType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[   
		select	SQL_CALC_FOUND_ROWS  
			 mif.member_no  
			, mif.member_id  
			, mif.member_password  
			, mif.member_name  
			, mif.jikjong_name  
			, mif.career_grade
			, mif.email_address  
			, mif.mobile_no  
			, mif.birth_date  
			, mif.jumin_no  
			, mif.gender_type  
			, mif.postal_no  
			, mif.postal_address  
			, mif.detail_address  
			, mif.photo_image_file_name
			, mif.sign_image_file_name
			, mif.age_agree_yn  
			, mif.service_agree_yn  
			, mif.personal_agree_yn  
			, mif.oauth_provider  
			, mif.oauth_cert_key  
			, mif.last_login_datetime  
			, mif.password_change_datetime  
			, mif.cookie_session  
			, mif.work_type  
			, mif.jumin_image_file_name
			, mif.jumin_back_image_file_name
			, mif.safe_education_yn  
			, mif.safe_education_image_file_name
			, mif.safe_education_hours  
			, mif.foreigner_yn  
			, mif.stay_start_date  
			, mif.stay_end_date  
			, mif.agency_company_id  
			, mif.agency_status_code  
			, mif.bank_name  
			, mif.bank_account_no  
			, mif.bank_account_name  
			, mif.insert_datetime  
			, mif.update_datetime 
			
			, mif.manpower_company_id  
			, mif.business_no  
			, mif.business_name  
			, mif.business_telno  
			
			, cui.customer_name
			, cui.business_no
			, cui.ceo_name
			, cui.postal_address
			
		from member_info mif
		left join customer_info cui on cui.customer_id = mif.member_id 
	 	]]> 
		<where>   
			<if test="selectMode == 'worker' ">  
				and mif.member_type = 'WORKER' 
			</if>
			<if test="selectMode == 'customer' "> 
				and mif.member_type = 'CUSTOMER'   
				and mif.manpower_company_id = #{manpowerCompanyId}
			</if>
			<if test="srhTotalText != null and srhTotalText != '' ">   
				and (   
				
				 mif.member_id like concat('%',#{srhTotalText},'%')   
				or mif.member_name like concat('%',#{srhTotalText},'%')   
				or mif.mobile_no like concat('%',#{srhTotalText},'%')       
				)   
			</if>   
			<if test="memberId != null and memberId != '' ">   
				and mif.member_id  = #{memberId}   
			</if>   
			<if test="memberName != null and memberName != ''">
	            AND mif.member_name LIKE CONCAT('%', #{memberName}, '%')
	        </if>
	        <if test="mobileNo != null and mobileNo != ''">
	            AND mif.mobile_no LIKE CONCAT('%', #{mobileNo}, '%')
	        </if>
			<if test="birthDate != null and birthDate != ''">
	            AND mif.birth_date LIKE CONCAT('%', #{birthDate}, '%')
	        </if>
	        <if test="postalAddress != null and postalAddress != ''">
	            AND mif.postal_address LIKE CONCAT('%', #{postalAddress}, '%')
	        </if>   
		</where>   
		<if test="srhOrderBy != null and  srhOrderBy != '' ">   
			order by 	${srhOrderBy} ${srhOrderAsc}   
		</if>   
		limit ${startRow} , ${pageRow}    
	</select>  
 
	<select id="subList_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel" resultType="ilike.ildrio.model.member.MemberInfoModel">  
	</select>  
 
	<select id="getMap_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel" resultType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[   
		select  
			  mif.member_id  
			, mif.member_password  
			, mif.member_password_dec  
			, mif.member_name  
			, mif.jikjong_name  
			, mif.career_grade
			, mif.career_years
			, mif.email_address  
			, mif.mobile_no  
			, mif.birth_date  
			, mif.jumin_no  
			, mif.gender_type  
			, mif.postal_no  
			, mif.postal_address  
			, mif.detail_address  
			, mif.photo_image_file_name  
			, mif.sign_image_file_name  
			, mif.age_agree_yn  
			, mif.service_agree_yn  
			, mif.personal_agree_yn  
			, mif.oauth_provider  
			, mif.oauth_cert_key  
			, mif.last_login_datetime  
			, mif.password_change_datetime  
			, mif.cookie_session  
			, mif.work_type  
			, mif.jumin_image_file_name  
			, mif.jumin_back_image_file_name  
			, mif.safe_education_yn  
			, mif.safe_education_image_file_name  
			, mif.safe_education_hours  
			, mif.foreigner_yn  
			, mif.stay_start_date  
			, mif.stay_end_date 
			, mif.license_image1_file_name   
			, mif.license_image2_file_name   
			, mif.agency_company_id  
			, mif.agency_status_code  
			, mif.bank_name  
			, mif.bank_account_no  
			, mif.bank_account_name  
			, mif.insert_datetime  
			, mif.update_datetime
			, ifnull(mif.member_type,'WORKER') as member_type
			, mif.manpower_company_id  
			, mif.business_no  
			, mif.business_name  
			, mif.business_telno  
			
			, cui.customer_name
			, cui.business_no
			, cui.ceo_name
			, cui.postal_address as customer_postal_address
			, cui.detail_address as customer_detail_address
			
		from member_info mif
		left join customer_info cui on cui.customer_id = mif.member_id 
		where 1 = 1  
	 	]]> 
	 	<choose>
	 		<when test="selectMode == 'login' "> 
	 			and mif.member_id  = #{memberId}  
				and mif.member_password  = #{memberPassword}    
	 		</when>
	 		<when test="selectMode == 'findId' "> 
	 			and mif.member_name  = #{memberName}  
				and replace(mif.mobile_no,'-','')  = replace(#{mobileNo},'-','')       
	 		</when>
	 		<otherwise>
	 			and mif.member_id  = #{memberId}  
	 		</otherwise>
	 	</choose>
	 	
	</select>  
 
	<select id="getCount_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel"  resultType="java.lang.Integer">  
		<![CDATA[   
		select 	count(*) count  
		from 	member_info  
		where 1 = 1 
	 	]]>
	 	<choose>
	 		<when test="selectMode == 'chk_name_hpno' "> 
	 			and member_name  = #{memberName}  
				and replace(mobile_no,'-','')  = replace(#{mobileNo},'-','')    
	 		</when>
	 		<otherwise>
	 			and member_id  = #{memberId}  
	 		</otherwise>
	 	</choose> 
	</select>  
 
	<update id="insert_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[   
		insert into member_info (  
			 member_id   
			, member_password   
			, member_password_dec 
			, member_name   
			, mobile_no  
			, member_type 
			, manpower_company_id 
			, age_agree_yn
			, service_agree_yn 
			, personal_agree_yn 
			, business_name
			, business_no
			, insert_datetime   
			, update_datetime   
	 	) values (  
			 #{memberId}  
			, #{password}
			, #{memberPasswordDec}  
			, #{memberName}  
			, #{mobileNo}  
			, #{memberType}  
			, #{manpowerCompanyId}
			, 'Y'    
			, 'Y'    
			, 'Y'  
			, #{businessName}
			, #{businessNo}  
			, now()  
			, now()  
	 	)   
	 	]]> 
	</update>  
 
	<update id="update_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel">  
		<choose>   
			<when test=" trxnMode == 'list_update' ">   
				<![CDATA[   
				update member_info set  
					 update_datetime = now()  
				where member_no = #{memberNo}  
	 			]]> 
			</when> 
			<when test=" trxnMode == 'update_password' ">   
				<![CDATA[   
				update member_info set  
				     member_password  = #{memberPassword} 
				     , member_password_dec  = #{memberPasswordDec}     
					 , update_datetime = now()  
				where member_id = #{memberId}
	 			]]> 
			</when> 
			<when test=" trxnMode == 'update_password_dec' ">   
				<![CDATA[   
				update member_info set  
				       member_password_dec  = #{memberPasswordDec}     
					 , update_datetime = now()  
				where member_id = #{memberId}
	 			]]> 
			</when> 
			<when test=" trxnMode == 'update_customer' ">   
				<![CDATA[   
				update member_info set  
					  postal_no = #{postalNo}  
					, postal_address = #{postalAddress}  
					, detail_address = #{detailAddress}  
					, age_agree_yn = #{ageAgreeYn}  
					, service_agree_yn = #{serviceAgreeYn}  
					, personal_agree_yn = #{personalAgreeYn}  
					, update_datetime = now()  
				where member_id = #{memberId}
	 			]]> 
			</when>    
			<otherwise>   
				<![CDATA[   
				update member_info set  
					 jikjong_name = #{jikjongName}  
					, career_grade = #{careerGrade}  
					, career_years = #{careerYears}  
					, email_address = #{emailAddress}  
					, birth_date = #{birthDate}  
					, jumin_no = #{juminNo}  
					, gender_type = #{genderType}  
					, postal_no = #{postalNo}  
					, postal_address = #{postalAddress}  
					, detail_address = #{detailAddress}  
					, photo_image_file_name = #{photoImageFileName}  
					, sign_image_file_name = #{signImageFileName}  
					, age_agree_yn = #{ageAgreeYn}  
					, service_agree_yn = #{serviceAgreeYn}  
					, personal_agree_yn = #{personalAgreeYn}  
					, jumin_image_file_name = #{juminImage}  
					, jumin_back_image_file_name = #{juminBackImageFileName}  
					, safe_education_yn = #{safeEducationYn}  
					, safe_education_image_file_name = #{safeEducationImageFileName}  
					, safe_education_hours = #{safeEducationHours}  
					, foreigner_yn = #{foreignerYn}  
					, stay_start_date = #{stayStartDate}  
					, stay_end_date = #{stayEndDate} 
					, license_image1_file_name = #{licenseImage1FileName}   
					, license_image2_file_name = #{licenseImage2FileName}   
					, agency_company_id = #{agencyCompanyId}  
					, agency_status_code = #{agencyStatusCode}  
					, bank_name = #{bankName}  
					, bank_account_no = #{bankAccountNo}  
					, bank_account_name = #{bankAccountName}  
					, update_datetime = now()  
				where member_id = #{memberId}  
	 			]]> 
			</otherwise>   
		</choose>   
	</update>  
 
	<update id="delete_memberInfo"  parameterType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[   
		delete from member_info   
		where member_no = #{memberNo}  
	 	]]> 
	</update>  
 
 	<update id="insert_memberMobileCert"  parameterType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[   
		insert into member_mobile_cert (  
			  member_name   
			, mobile_no 
			, cert_key
			, cert_no 
			, insert_datetime   
			, update_datetime   
	 	) values (  
			  #{memberName}  
			, #{mobileNo}  
			, #{certKey}  
			, #{certNo}  
			, now()  
			, now()  
	 	) on duplicate key update
	 	      cert_key = #{certKey}  
			, cert_no = #{certNo} 
			, update_datetime = now()   
	 	]]> 
	</update> 
	
	<select id="getMap_memberMobileCert"  parameterType="ilike.ildrio.model.member.MemberInfoModel" resultType="ilike.ildrio.model.member.MemberInfoModel">  
		<![CDATA[ 
			select
				  member_name   
				, mobile_no 
				, cert_key
				, cert_no 
				, insert_datetime   
				, update_datetime   
			from	member_mobile_cert
			where  	member_name = #{memberName}   
			and 	mobile_no = #{mobileNo}  
			and 	cert_key = #{certKey}  
			and 	cert_no = #{certNo}  
		]]> 
	</select>   
</mapper>