<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="ilike.ildrio.mapper.employment.EmploymentMemberMapper">    
 
 
 
	<select id="getListCount_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel"  resultType="java.lang.Integer"> 
		SELECT FOUND_ROWS() totRow
	</select> 
	 
	<select id="getList_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel" resultType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<![CDATA[   
		select	SQL_CALC_FOUND_ROWS  
			 emb.job_no  
			, emb.tech_code  
			, emb.career_code  
			, emb.member_no  
			, emb.job_apply_no  
			, emb.daily_wage  
			, emb.request_wage  
			, emb.comission_fee  
			, emb.pay_wage  
			, emb.employment_memo  
			, emb.employment_status  
			, emb.billing_no  
			, emb.insert_datetime  
			, emb.update_datetime  
		from employment_member emb
	 	]]> 
		<where>   
			<if test="jobNo != null and jobNo != '' ">   
				and emb.job_no  like concat('%',#{jobNo},'%')   
			</if>   
			<if test="techCode != null and techCode != '' ">   
				and emb.tech_code = #{techCode}   
			</if>   
			<if test="careerCode != null and careerCode != '' ">   
				and emb.career_code = #{careerCode}   
			</if>   
			<if test="memberNo != null and memberNo != '' ">   
				and emb.member_no  like concat('%',#{memberNo},'%')   
			</if>   
		</where>   
		<if test="srhOrderBy != null and  srhOrderBy != '' ">   
			order by 	${srhOrderBy} ${srhOrderAsc}   
		</if>   
		limit ${startRow} , ${pageRow}    
	</select>  
 
	<select id="subList_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel" resultType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<if test=" trxnMode == 'list_techCode' ">   
			<![CDATA[   
	 		]]> 
	 	</if> 
		<if test=" trxnMode == 'list_careerCode' ">   
			<![CDATA[   
	 		]]> 
	 	</if> 
	</select>  
 
	<select id="getMap_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel" resultType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<![CDATA[   
		select  
			 emb.job_no  
			, emb.tech_code  
			, emb.career_code  
			, emb.member_no  
			, emb.job_apply_no  
			, emb.daily_wage  
			, emb.request_wage  
			, emb.comission_fee  
			, emb.pay_wage  
			, emb.employment_memo  
			, emb.employment_status  
			, emb.billing_no  
			, emb.insert_datetime  
			, emb.update_datetime  
		from employment_member emb
		where emb.job_no = #{jobNo}  
		and emb.tech_code = #{techCode}  
		and emb.career_code = #{careerCode}  
		and emb.member_no = #{memberNo}  
	 	]]> 
	</select>  
 
	<select id="getCount_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel"  resultType="java.lang.Integer">  
		<![CDATA[   
		select 	count(*) count  
		from 	employment_member  
		where job_no = #{jobNo}  
		and tech_code = #{techCode}  
		and career_code = #{careerCode}  
		and member_no = #{memberNo}  
	 	]]> 
	</select>  
 
	<update id="insert_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<![CDATA[   
		insert into employment_member (  
			 job_no   
			, tech_code   
			, career_code   
			, member_no   
			, job_apply_no   
			, daily_wage   
			, request_wage   
			, comission_fee   
			, pay_wage   
			, employment_memo   
			, employment_status   
			, billing_no   
			, insert_datetime   
			, update_datetime   
	 	) values (  
			 #{jobNo}  
			, #{techCode}  
			, #{careerCode}  
			, #{memberNo}  
			, #{jobApplyNo}  
			, replace(#{dailyWage},',','')  
			, replace(#{requestWage},',','')  
			, replace(#{comissionFee},',','')  
			, replace(#{payWage},',','')  
			, #{employmentMemo}  
			, #{employmentStatus}  
			, #{billingNo}  
			, now()  
			, now()  
	 	)   
	 	]]> 
	</update>  
 
	<update id="update_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<choose>   
			<when test=" trxnMode == 'list_update' ">   
				<![CDATA[   
				update employment_member set  
					 update_datetime = now()  
				where job_no = #{jobNo}  
				and tech_code = #{techCode}  
				and career_code = #{careerCode}  
				and member_no = #{memberNo}  
	 			]]> 
			</when>   
			<otherwise>   
				<![CDATA[   
				update employment_member set  
					 job_apply_no = #{jobApplyNo}  
					, daily_wage = replace(#{dailyWage},',','')  
					, request_wage = replace(#{requestWage},',','')  
					, comission_fee = replace(#{comissionFee},',','')  
					, pay_wage = replace(#{payWage},',','')  
					, employment_memo = #{employmentMemo}  
					, employment_status = #{employmentStatus}  
					, billing_no = #{billingNo}  
					, update_datetime = now()  
				where job_no = #{jobNo}  
				and tech_code = #{techCode}  
				and career_code = #{careerCode}  
				and member_no = #{memberNo}  
	 			]]> 
			</otherwise>   
		</choose>   
	</update>  
 
	<update id="delete_employmentMember"  parameterType="ilike.ildrio.model.employment.EmploymentMemberModel">  
		<![CDATA[   
		delete from employment_member   
		where job_no = #{jobNo}  
		and tech_code = #{techCode}  
		and career_code = #{careerCode}  
		and member_no = #{memberNo}  
	 	]]> 
	</update>  
 
</mapper>